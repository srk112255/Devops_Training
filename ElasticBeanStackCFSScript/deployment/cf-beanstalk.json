{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template ElasticBeanstalk in default VPC: Stack: 64bit Amazon Linux 2017.03 v4.1.1 running Node.js",

  "Parameters" : {

    "ApplicationName" : {
      "Description" : "Application name",
      "Type" : "String",
      "MinLength": "4",
      "MaxLength": "100",
      "Default" : "PodCastApplication",
      "AllowedPattern" : "^[\\w-]*$",
      "ConstraintDescription" : "must be a valid string Alphanumeric + _ and -"
    },

    "EnvironmentName" : {
      "Description" : "Environment Name",
      "Type" : "String",
      "MinLength": "3",
      "MaxLength": "20",
      "Default" : "production",
      "AllowedPattern" : "^[\\w-]*$",
      "ConstraintDescription" : "must be a valid string Alphanumeric + _ and -"
    },

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the Elastic Beanstalk hosts",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default" : "podcast",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "SSHLocation" : {
      "Description" : "Lockdown SSH access to the Beasntalk EC2 instances (default can be accessed from anywhere)",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },

    "AutoScalingGroupMinSize" : {
      "Description" : "Minimum number of instances you want in your Auto Scaling group.",
      "Type" : "Number",
      "Default" : "1",
      "ConstraintDescription" : "must be a valid integer value."
    },

    "AutoScalingGroupMaxSize" : {
      "Description" : "Maximum number of instances you want in your Auto Scaling group.",
      "Type" : "Number",
      "Default" : "3",
      "ConstraintDescription" : "must be a valid integer value."
    },

    "RollingUpdateEnabled": {
      "Type": "String",
      "Description": "If true, enables rolling updates for an environment. Rolling updates are useful when you need to make small, frequent updates to your Elastic Beanstalk software application and you want to avoid application downtime.",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "true"
    },

    "RollingUpdateType": {
      "Type": "String",
      "Description": "Time-based rolling updates apply a PauseTime between batches. Health-based rolling updates wait for new instances to pass health checks before moving on to the next batch. Immutable updates launch a full set of instances in a new AutoScaling group.",
      "AllowedValues": [
        "Time",
        "Health",
        "Immutable"
      ],
      "Default": "Immutable"
    },

    "StreamLogs": {
      "Type": "String",
      "Description": "Whether to create groups in CloudWatch logs for proxy and deployment logs, and stream logs from each instance in your environment.",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "true"
    },

    "StreamLogsDeleteOnTerminate": {
      "Type": "String",
      "Description": "Whether to delete the log groups when the environment is terminated. If false, the logs are kept RetentionDays days.",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "true"
    },

    "StreamLogsRetentionInDays" : {
      "Description" : "The number of days to keep log events before they expire.",
      "Type" : "Number",
      "Default" : "7",
      "AllowedValues": [
        "1", "3", "5", "7", "14", "30", "60", "90", "120", "150", "180", "365", "400", "545", "731", "1827", "3653"
      ]
    },

    "DeploymentPolicy": {
      "Type": "String",
      "Description": "Choose a deployment policy for application version deployments.",
      "AllowedValues": [
        "AllAtOnce",
        "Rolling",
        "RollingWithAdditionalBatch",
        "Immutable"
      ],
      "Default": "Immutable"
    },

    "LogPublicationControl": {
      "Type": "String",
      "Description": "Copy the log files for your application's Amazon EC2 instances to the Amazon S3 bucket associated with your application.",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "true"
    },

    "ELBCrossZone": {
      "Type": "String",
      "Description": "Configure the load balancer to route traffic evenly across all instances in all Availability Zones rather than only within each zone.",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "true"
    },

    "HealtReportingType": {
      "Type": "String",
      "Description": "Health reporting system (basic or enhanced). Enhanced health reporting requires a service role and a version 2 platform configuration.",
      "AllowedValues": [
        "basic",
        "enhanced"
      ],
      "Default": "enhanced"
    },

    "EnvironmentType": {
      "Type": "String",
      "Description": "Set to SingleInstance to launch one EC2 instance with no load balancer.",
      "AllowedValues": [
        "SingleInstance",
        "LoadBalanced"
      ],
      "Default": "LoadBalanced"
    },

    "OperatorEmail": {
      "Description": "Email address to notify if there are any operational issues",
      "Type": "String",
      "Default": "admin@podcast.com",
      "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
      "ConstraintDescription": "must be a valid email address."
    },

    "RootDomainName": {
      "Description": "Domain name for your website (example.com)",
      "Type": "String",
      "Default": "podcast.com",
      "AllowedPattern": "(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]",
      "ConstraintDescription": "must be a valid domain name."
    },

    "ApplicationS3Bucket": {
      "Description": "Application path in s3",
      "Type": "String",
      "Default": "https://s3-us-west-2.amazonaws.com/podcast-app-beanstalk"
    },

    "ApplicationS3Artifact": {
      "Description": "Application artifact file",
      "Type": "String",
      "Default": "nodejsapp.zip"
    },

    "AWSRegion": {
      "Description": "AWS Region name",
      "Type": "String",
      "Default": "us-west-2"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t1.micro"    : { "Arch" : "NATPV64"   },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATPV64"   },
      "m1.medium"   : { "Arch" : "NATPV64"   },
      "m1.large"    : { "Arch" : "NATPV64"   },
      "m1.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.2xlarge"  : { "Arch" : "NATPV64"   },
      "m2.4xlarge"  : { "Arch" : "NATPV64"   },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATPV64"   },
      "c1.xlarge"   : { "Arch" : "NATPV64"   },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-6869aa05", "HVMG2" : "ami-61e27177"},
      "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-7172b611", "HVMG2" : "ami-60aa3700"},
      "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-31490d51", "HVMG2" : "ami-4b694d2b"},
      "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-f9dd458a", "HVMG2" : "ami-2955524f"},
      "eu-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-886369ec", "HVMG2" : "NOT_SUPPORTED"},
      "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-ea26ce85", "HVMG2" : "ami-81ac71ee"},
      "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-374db956", "HVMG2" : "ami-46220c21"},
      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-2b408b45", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-a59b49c6", "HVMG2" : "ami-c212aba1"},
      "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-dc361ebf", "HVMG2" : "ami-0ad2db69"},
      "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-ffbdd790", "HVMG2" : "ami-ca3042a5"},
      "us-east-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-f6035893", "HVMG2" : "NOT_SUPPORTED"},
      "ca-central-1"     : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-730ebd17", "HVMG2" : "NOT_SUPPORTED"},
      "sa-east-1"        : {"PV64" : "ami-1ad34676", "HVM64" : "ami-6dd04501", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-77559f1a", "HVM64" : "ami-8e6aa0e3", "HVMG2" : "NOT_SUPPORTED"}
    },

    "AWSNATRegionArch2AMI" : {
      "us-east-1"        : {"NATPV64" : "ami-c02b04a8", "NATHVM64" : "ami-4868ab25"},
      "us-west-2"        : {"NATPV64" : "ami-2dae821d", "NATHVM64" : "ami-a275b1c2"},
      "us-west-1"        : {"NATPV64" : "ami-67a54423", "NATHVM64" : "ami-004b0f60"},
      "eu-west-1"        : {"NATPV64" : "ami-cb7de3bc", "NATHVM64" : "ami-a8dd45db"},
      "eu-west-2"        : {"NATPV64" : "NOT_SUPPORTED", "NATHVM64" : "ami-6b4d470f"},
      "eu-central-1"     : {"NATPV64" : "ami-3604392b", "NATHVM64" : "ami-5825cd37"},
      "ap-northeast-1"   : {"NATPV64" : "ami-c7e016c7", "NATHVM64" : "ami-2443b745"},
      "ap-northeast-2"   : {"NATPV64" : "NOT_SUPPORTED", "NATHVM64" : "ami-d14388bf"},
      "ap-southeast-1"   : {"NATPV64" : "ami-b098a9e2", "NATHVM64" : "ami-a79b49c4"},
      "ap-southeast-2"   : {"NATPV64" : "ami-0fed9d35", "NATHVM64" : "ami-53371f30"},
      "ap-south-1"       : {"NATPV64" : "NOT_SUPPORTED", "NATHVM64" : "ami-e2b9d38d"},
      "us-east-2"        : {"NATPV64" : "NOT_SUPPORTED", "NATHVM64" : "ami-92a6fef7"},
      "ca-central-1"     : {"NATPV64" : "NOT_SUPPORTED", "NATHVM64" : "ami-32f14356"},
      "sa-east-1"        : {"NATPV64" : "ami-93fb408e", "NATHVM64" : "ami-9336bcff"},
      "cn-north-1"       : {"NATPV64" : "ami-bc3fad85", "NATHVM64" : "ami-7b549e16"}
    },

    "Region2Principal" : {
      "us-east-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "us-west-2"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "us-west-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "eu-west-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "eu-west-2"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-southeast-1" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-northeast-1" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-northeast-2" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-southeast-2" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-south-1"     : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "us-east-2"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ca-central-1"   : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "sa-east-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "cn-north-1"     : { "EC2Principal" : "ec2.amazonaws.com.cn", "OpsWorksPrincipal" : "opsworks.amazonaws.com.cn" },
      "eu-central-1"   : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" }
    }

  },

  "Resources" : {

    "HostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "HostedZoneConfig": {
          "Comment": { "Fn::Join" : [" ", [ "Hosted Zone for", { "Ref" : "RootDomainName" }]]}
        },
        "Name": { "Ref": "RootDomainName" }
      }
    },

    "DNSRecord" : {
      "Type": "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneId" : {"Ref" : "HostedZone"},
        "Name": { "Fn::Join" : [".", ["www", { "Ref": "RootDomainName" }]]},
        "Type": "CNAME",
        "TTL": "60",
        "ResourceRecords": [ { "Fn::GetAtt" : ["SampleEnvironment", "EndpointURL"] } ]
      }
    },

    "NotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [{ "Endpoint": { "Ref": "OperatorEmail" }, "Protocol": "email" }]
      }
    },

    "ServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": { "Service": "elasticbeanstalk.amazonaws.com" },
            "Condition": { "StringEquals": { "sts:ExternalId": "elasticbeanstalk" } },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth",
          "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService"
        ]
      }
    },

    "InstancesRole": {
      "Type": "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement"  : [{
            "Effect"   : "Allow",
            "Principal": { "Service": [{ "Fn::FindInMap" : ["Region2Principal", {"Ref" : "AWS::Region"}, "EC2Principal"]}] },
            "Action"   : [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },

    "InstancesRolePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName" : "InstancesRole",
        "PolicyDocument" : {
          "Statement"  : [ {
            "Effect"    : "Allow",
            "NotAction" : "iam:*",
            "Resource"  : "*"
          } ]
        },
        "Roles": [ { "Ref": "InstancesRole" } ]
      }
    },

    "EBServerInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "InstancesRole" } ]
      }
    },

    "BalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SecurityGroup for ElasticBeanstalk Balancer",
        "SecurityGroupIngress": [
          { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "8080",  "ToPort" : "8080",  "CidrIp" : { "Ref" : "SSHLocation" } }
        ]
      }
    },

    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SecurityGroup for ElasticBeanstalk EC2 Instances",
        "SecurityGroupIngress": [
          { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "SourceSecurityGroupName" : { "Ref" : "BalancerSecurityGroup" }},
          { "IpProtocol" : "tcp", "FromPort" : "8080",  "ToPort" : "8080",  "SourceSecurityGroupName" : { "Ref" : "BalancerSecurityGroup" }},
          { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : { "Ref" : "SSHLocation" }},
          { "IpProtocol" : "tcp", "FromPort" : "3389",  "ToPort" : "3389",  "CidrIp" : { "Ref" : "SSHLocation" }}
        ]
      }
    },

    "SampleApplication" : {
      "Type" : "AWS::ElasticBeanstalk::Application",
      "Properties" : {
        "ApplicationName" : { "Ref" : "ApplicationName" },
        "Description" : "AWS Elastic Beanstalk Node.js PodCast Application"
      }
    },

    "SampleApplicationVersion" : {
      "Type" : "AWS::ElasticBeanstalk::ApplicationVersion",
      "Properties" : {
        "Description" : "1.0.0",
        "ApplicationName" : { "Ref" : "SampleApplication" },
        "SourceBundle" : {
          "S3Bucket" : { "Ref": "ApplicationS3Bucket" },
          "S3Key" : { "Ref": "ApplicationS3Artifact" }
        }
      }
    },

    "SampleConfigTemplate" : {
      "Type" : "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties" : {
        "ApplicationName" : { "Ref" : "SampleApplication" },
        "Description" :  "AWS Elastic Beanstalk Environment running Node.js PodCast Application",
        "EnvironmentId" : "",
        "SolutionStackName" : "64bit Amazon Linux 2017.09 v4.4.5 running Node.js",
        "OptionSettings" : [
          {"Namespace" : "aws:elb:loadbalancer", "OptionName" : "CrossZone", "Value": { "Ref": "ELBCrossZone" }},
          {"Namespace" : "aws:elb:loadbalancer", "OptionName" : "SecurityGroups", "Value" : { "Fn::GetAtt" : ["BalancerSecurityGroup", "GroupId"] }},

          {"Namespace" : "aws:elb:listener:8080", "OptionName": "ListenerProtocol", "Value": "TCP"},
          {"Namespace" : "aws:elb:listener:8080", "OptionName": "InstancePort", "Value": "8080"},
          {"Namespace" : "aws:elb:listener:8080", "OptionName": "InstanceProtocol", "Value": "TCP"},
          {"Namespace" : "aws:elb:listener:8080", "OptionName": "ListenerEnabled", "Value": "true"},

          {"Namespace" : "aws:elasticbeanstalk:environment", "OptionName": "EnvironmentType", "Value": { "Ref": "EnvironmentType" }},
          {"Namespace" : "aws:elasticbeanstalk:environment", "OptionName": "ServiceRole", "Value": { "Ref": "ServiceRole" }},

          {"Namespace" : "aws:elasticbeanstalk:sns:topics", "OptionName": "Notification Protocol", "Value": "email"},
          {"Namespace" : "aws:elasticbeanstalk:sns:topics", "OptionName": "Notification Endpoint", "Value": { "Ref": "OperatorEmail" }},
          {"Namespace" : "aws:elasticbeanstalk:sns:topics", "OptionName": "Notification Topic ARN", "Value": { "Ref": "NotificationTopic" }},

          {"Namespace" : "aws:autoscaling:launchconfiguration", "OptionName" : "EC2KeyName", "Value" : { "Ref" : "KeyName" }},
          {"Namespace" : "aws:autoscaling:launchconfiguration", "OptionName": "IamInstanceProfile", "Value": { "Ref": "EBServerInstanceProfile" }},
          {"Namespace" : "aws:autoscaling:launchconfiguration", "OptionName" : "SecurityGroups", "Value" : { "Ref": "InstanceSecurityGroup" }},

          {"Namespace" : "aws:elasticbeanstalk:healthreporting:system", "OptionName": "SystemType", "Value": { "Ref": "HealtReportingType" }},

          {"Namespace" : "aws:autoscaling:asg", "OptionName": "MinSize", "Value": { "Ref": "AutoScalingGroupMinSize" }},
          {"Namespace" : "aws:autoscaling:asg", "OptionName": "MaxSize", "Value": { "Ref": "AutoScalingGroupMaxSize" }},

          {"Namespace" : "aws:autoscaling:updatepolicy:rollingupdate", "OptionName": "RollingUpdateEnabled", "Value": { "Ref": "RollingUpdateEnabled" }},
          {"Namespace" : "aws:autoscaling:updatepolicy:rollingupdate", "OptionName": "RollingUpdateType", "Value": { "Ref": "RollingUpdateType" }},

          {"Namespace" : "aws:elasticbeanstalk:command", "OptionName": "DeploymentPolicy", "Value": { "Ref": "DeploymentPolicy" }},

          {"Namespace" : "aws:elasticbeanstalk:cloudwatch:logs", "OptionName": "StreamLogs", "Value": { "Ref": "StreamLogs" }},
          {"Namespace" : "aws:elasticbeanstalk:cloudwatch:logs", "OptionName": "DeleteOnTerminate", "Value": { "Ref": "StreamLogsDeleteOnTerminate" }},
          {"Namespace" : "aws:elasticbeanstalk:cloudwatch:logs", "OptionName": "RetentionInDays", "Value": { "Ref": "StreamLogsRetentionInDays" }},

          {"Namespace" : "aws:elasticbeanstalk:hostmanager", "OptionName": "LogPublicationControl", "Value": { "Ref": "LogPublicationControl" }}
       ]
      }
    },

    "SampleEnvironment" : {
      "Type" : "AWS::ElasticBeanstalk::Environment",
      "Properties" : {
         "ApplicationName" : { "Ref" : "SampleApplication" },
         "CNAMEPrefix" : { "Fn::Join" : ["-", [{ "Ref" : "ApplicationName" }, { "Ref" : "EnvironmentName" }, { "Ref" : "HostedZone"} ]]},
         "EnvironmentName" : { "Ref" : "EnvironmentName" },
         "Description" :  "AWS Elastic Beanstalk Environment running Node.js PodCast Application",
         "TemplateName": { "Ref": "SampleConfigTemplate" },
         "VersionLabel" : { "Ref" : "SampleApplicationVersion" }
      }
    }

  },

  "Outputs" : {
    "URL" : {
      "Description" : "The URL of the Elastic Beanstalk environment",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : ["SampleEnvironment", "EndpointURL"] }]]}
    }
  }
}
